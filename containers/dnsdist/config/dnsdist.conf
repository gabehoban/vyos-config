-- udp/tcp dns listening
setLocal("0.0.0.0:53", {})

-- Local Bind
newServer({
  address = "10.40.0.4",
  pool = "bind",
  checkName = "gateway.labrats.cc"
})

-- AdguardHome Server
newServer({
  address = "10.40.0.5:53",
  pool = "adguard",
  healthCheckMode = "lazy",
  checkInterval = 1800,
  maxCheckFailures = 3,
  lazyHealthCheckFailedInterval = 30,
  rise = 2,
  lazyHealthCheckThreshold = 30,
  lazyHealthCheckSampleSize = 100,
  lazyHealthCheckMinSampleCount = 10,
  lazyHealthCheckMode = 'TimeoutOnly',
  useClientSubnet = true
})
-- Adguard will be given requester IP
setECSOverride(true)
setECSSourcePrefixV4(32)

-- CloudFlare DNS over TLS
newServer({
  address = "1.1.1.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})
newServer({
  address = "1.0.0.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})

-- Enable caching
pc = newPacketCache(10000, {
  maxTTL = 86400,
  minTTL = 0,
  temporaryFailureTTL = 60,
  staleTTL = 60,
  dontAge = false
})
getPool(""):setCache(pc)

-- Routing rules
addAction("10.32.20.0/24", PoolAction("cloudflare")) -- guest vlan
addAction("10.32.20.0/24", DropAction())             -- stop processing
addAction("zip", DropAction())                       -- stop processing

addAction('labrats.cc', PoolAction('bind'))
addAction('32.10.in-addr.arpa', PoolAction('bind'))

addAction("10.20.0.0/24",  PoolAction("adguard"))  -- wireguard vpn
addAction("10.32.0.0/24",  PoolAction("adguard"))  -- lan vlan
addAction("10.32.10.0/24", PoolAction("adguard"))  -- trusted vlan
addAction("10.32.30.0/24", PoolAction("adguard"))  -- iot vlan
addAction("10.32.40.0/24", PoolAction("adguard"))  -- servers vlan